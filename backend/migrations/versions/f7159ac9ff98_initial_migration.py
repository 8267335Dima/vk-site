"""Initial migration

Revision ID: f7159ac9ff98
Revises: 
Create Date: 2025-09-11 21:28:17.470043

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f7159ac9ff98'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('friends_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('friends_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'date', name='_user_date_friends_uc')
    )
    op.create_index('ix_friends_history_user_date', 'friends_history', ['user_id', 'date'], unique=False)
    op.create_table('profile_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('total_likes_on_content', sa.Integer(), nullable=False),
    sa.Column('friends_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'date', name='_user_date_metric_uc')
    )
    op.create_index('ix_profile_metrics_user_date', 'profile_metrics', ['user_id', 'date'], unique=False)
    op.create_table('proxies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('encrypted_proxy_url', sa.String(), nullable=False),
    sa.Column('is_working', sa.Boolean(), nullable=False),
    sa.Column('last_checked_at', sa.DateTime(), nullable=True),
    sa.Column('check_status_message', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'encrypted_proxy_url', name='_user_proxy_uc')
    )
    op.create_index(op.f('ix_proxies_is_working'), 'proxies', ['is_working'], unique=False)
    op.create_index(op.f('ix_proxies_user_id'), 'proxies', ['user_id'], unique=False)
    op.create_table('task_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('celery_task_id', sa.String(), nullable=True),
    sa.Column('task_name', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('result', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_history_celery_task_id'), 'task_history', ['celery_task_id'], unique=True)
    op.create_index(op.f('ix_task_history_status'), 'task_history', ['status'], unique=False)
    op.create_index(op.f('ix_task_history_task_name'), 'task_history', ['task_name'], unique=False)
    op.create_index(op.f('ix_task_history_user_id'), 'task_history', ['user_id'], unique=False)
    op.create_index('ix_task_history_user_status', 'task_history', ['user_id', 'status'], unique=False)
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_task_type'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_user_id'), table_name='tasks')
    op.drop_table('tasks')
    op.alter_column('action_logs', 'message',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.drop_index(op.f('ix_action_logs_id'), table_name='action_logs')
    op.create_index(op.f('ix_action_logs_action_type'), 'action_logs', ['action_type'], unique=False)
    op.drop_constraint(op.f('action_logs_user_id_fkey'), 'action_logs', type_='foreignkey')
    op.create_foreign_key(None, 'action_logs', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('action_logs', 'target_url')
    op.drop_constraint(op.f('automations_user_id_fkey'), 'automations', type_='foreignkey')
    op.create_foreign_key(None, 'automations', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('daily_stats', sa.Column('messages_sent_count', sa.Integer(), nullable=False))
    op.drop_column('daily_stats', 'like_friends_feed_count')
    op.add_column('login_history', sa.Column('timestamp', sa.DateTime(), nullable=True))
    op.alter_column('login_history', 'ip_address',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('login_history', 'user_agent',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.create_index(op.f('ix_login_history_timestamp'), 'login_history', ['timestamp'], unique=False)
    op.drop_constraint(op.f('login_history_user_id_fkey'), 'login_history', type_='foreignkey')
    op.create_foreign_key(None, 'login_history', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('login_history', 'login_timestamp')
    op.add_column('payments', sa.Column('payment_system_id', sa.String(), nullable=False))
    op.add_column('payments', sa.Column('months', sa.Integer(), nullable=False))
    op.drop_index(op.f('ix_payments_yookassa_payment_id'), table_name='payments')
    op.create_index(op.f('ix_payments_payment_system_id'), 'payments', ['payment_system_id'], unique=True)
    op.drop_column('payments', 'yookassa_payment_id')
    op.drop_column('scenarios', 'created_at')
    op.drop_column('scenarios', 'last_run_at')
    op.drop_constraint(op.f('sent_congratulations_user_id_fkey'), 'sent_congratulations', type_='foreignkey')
    op.create_foreign_key(None, 'sent_congratulations', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('sent_congratulations', 'sent_at')
    op.drop_column('users', 'encrypted_proxy')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('encrypted_proxy', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('sent_congratulations', sa.Column('sent_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'sent_congratulations', type_='foreignkey')
    op.create_foreign_key(op.f('sent_congratulations_user_id_fkey'), 'sent_congratulations', 'users', ['user_id'], ['id'])
    op.add_column('scenarios', sa.Column('last_run_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('scenarios', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('payments', sa.Column('yookassa_payment_id', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_payments_payment_system_id'), table_name='payments')
    op.create_index(op.f('ix_payments_yookassa_payment_id'), 'payments', ['yookassa_payment_id'], unique=True)
    op.drop_column('payments', 'months')
    op.drop_column('payments', 'payment_system_id')
    op.add_column('login_history', sa.Column('login_timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'login_history', type_='foreignkey')
    op.create_foreign_key(op.f('login_history_user_id_fkey'), 'login_history', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_login_history_timestamp'), table_name='login_history')
    op.alter_column('login_history', 'user_agent',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('login_history', 'ip_address',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('login_history', 'timestamp')
    op.add_column('daily_stats', sa.Column('like_friends_feed_count', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_column('daily_stats', 'messages_sent_count')
    op.drop_constraint(None, 'automations', type_='foreignkey')
    op.create_foreign_key(op.f('automations_user_id_fkey'), 'automations', 'users', ['user_id'], ['id'])
    op.add_column('action_logs', sa.Column('target_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'action_logs', type_='foreignkey')
    op.create_foreign_key(op.f('action_logs_user_id_fkey'), 'action_logs', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_action_logs_action_type'), table_name='action_logs')
    op.create_index(op.f('ix_action_logs_id'), 'action_logs', ['id'], unique=False)
    op.alter_column('action_logs', 'message',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.create_table('tasks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('task_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('tasks_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('tasks_pkey'))
    )
    op.create_index(op.f('ix_tasks_user_id'), 'tasks', ['user_id'], unique=False)
    op.create_index(op.f('ix_tasks_task_type'), 'tasks', ['task_type'], unique=False)
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    op.drop_index('ix_task_history_user_status', table_name='task_history')
    op.drop_index(op.f('ix_task_history_user_id'), table_name='task_history')
    op.drop_index(op.f('ix_task_history_task_name'), table_name='task_history')
    op.drop_index(op.f('ix_task_history_status'), table_name='task_history')
    op.drop_index(op.f('ix_task_history_celery_task_id'), table_name='task_history')
    op.drop_table('task_history')
    op.drop_index(op.f('ix_proxies_user_id'), table_name='proxies')
    op.drop_index(op.f('ix_proxies_is_working'), table_name='proxies')
    op.drop_table('proxies')
    op.drop_index('ix_profile_metrics_user_date', table_name='profile_metrics')
    op.drop_table('profile_metrics')
    op.drop_index('ix_friends_history_user_date', table_name='friends_history')
    op.drop_table('friends_history')
    # ### end Alembic commands ###
