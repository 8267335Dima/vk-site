"""Final stable migration

Revision ID: c8b242918a4d
Revises: 
Create Date: 2025-09-14 07:35:07.598733

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c8b242918a4d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vk_id', sa.BigInteger(), nullable=False),
    sa.Column('encrypted_vk_token', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('plan', sa.String(), server_default='Базовый', nullable=False),
    sa.Column('plan_expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('daily_likes_limit', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('daily_add_friends_limit', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('daily_message_limit', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('delay_profile', sa.Enum('slow', 'normal', 'fast', name='delayprofile'), server_default='normal', nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_vk_id'), 'users', ['vk_id'], unique=True)
    op.create_table('action_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.String(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_action_logs_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_action_logs'))
    )
    op.create_index(op.f('ix_action_logs_action_type'), 'action_logs', ['action_type'], unique=False)
    op.create_index(op.f('ix_action_logs_timestamp'), 'action_logs', ['timestamp'], unique=False)
    op.create_index(op.f('ix_action_logs_user_id'), 'action_logs', ['user_id'], unique=False)
    op.create_table('automations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('automation_type', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('last_run_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_automations_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_automations')),
    sa.UniqueConstraint('user_id', 'automation_type', name='_user_automation_uc')
    )
    op.create_index(op.f('ix_automations_automation_type'), 'automations', ['automation_type'], unique=False)
    op.create_index(op.f('ix_automations_user_id'), 'automations', ['user_id'], unique=False)
    op.create_table('daily_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('likes_count', sa.Integer(), nullable=False),
    sa.Column('friends_added_count', sa.Integer(), nullable=False),
    sa.Column('friend_requests_accepted_count', sa.Integer(), nullable=False),
    sa.Column('stories_viewed_count', sa.Integer(), nullable=False),
    sa.Column('friends_removed_count', sa.Integer(), nullable=False),
    sa.Column('messages_sent_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_daily_stats_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_daily_stats')),
    sa.UniqueConstraint('user_id', 'date', name='_user_date_uc')
    )
    op.create_index('ix_daily_stats_user_date', 'daily_stats', ['user_id', 'date'], unique=False)
    op.create_table('filter_presets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('action_type', sa.String(), nullable=False),
    sa.Column('filters', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_filter_presets_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_filter_presets')),
    sa.UniqueConstraint('user_id', 'name', 'action_type', name='_user_name_action_uc')
    )
    op.create_index(op.f('ix_filter_presets_action_type'), 'filter_presets', ['action_type'], unique=False)
    op.create_index(op.f('ix_filter_presets_user_id'), 'filter_presets', ['user_id'], unique=False)
    op.create_table('friend_request_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('target_vk_id', sa.BigInteger(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'accepted', name='friendrequeststatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_friend_request_logs_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_friend_request_logs')),
    sa.UniqueConstraint('user_id', 'target_vk_id', name='_user_target_uc')
    )
    op.create_index(op.f('ix_friend_request_logs_created_at'), 'friend_request_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_friend_request_logs_status'), 'friend_request_logs', ['status'], unique=False)
    op.create_index(op.f('ix_friend_request_logs_target_vk_id'), 'friend_request_logs', ['target_vk_id'], unique=False)
    op.create_index(op.f('ix_friend_request_logs_user_id'), 'friend_request_logs', ['user_id'], unique=False)
    op.create_table('friends_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('friends_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_friends_history_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_friends_history')),
    sa.UniqueConstraint('user_id', 'date', name='_user_date_friends_uc')
    )
    op.create_index('ix_friends_history_user_date', 'friends_history', ['user_id', 'date'], unique=False)
    op.create_table('login_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_login_history_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_login_history'))
    )
    op.create_index(op.f('ix_login_history_timestamp'), 'login_history', ['timestamp'], unique=False)
    op.create_index(op.f('ix_login_history_user_id'), 'login_history', ['user_id'], unique=False)
    op.create_table('managed_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manager_user_id', sa.Integer(), nullable=False),
    sa.Column('profile_user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['manager_user_id'], ['users.id'], name=op.f('fk_managed_profiles_manager_user_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['profile_user_id'], ['users.id'], name=op.f('fk_managed_profiles_profile_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_managed_profiles')),
    sa.UniqueConstraint('manager_user_id', 'profile_user_id', name='_manager_profile_uc')
    )
    op.create_index(op.f('ix_managed_profiles_manager_user_id'), 'managed_profiles', ['manager_user_id'], unique=False)
    op.create_index(op.f('ix_managed_profiles_profile_user_id'), 'managed_profiles', ['profile_user_id'], unique=False)
    op.create_table('monthly_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('month_identifier', sa.String(), nullable=False),
    sa.Column('likes_count', sa.Integer(), nullable=False),
    sa.Column('friends_added_count', sa.Integer(), nullable=False),
    sa.Column('friend_requests_accepted_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_monthly_stats_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_monthly_stats')),
    sa.UniqueConstraint('user_id', 'month_identifier', name='_user_month_uc')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('level', sa.String(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_notifications_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notifications'))
    )
    op.create_index(op.f('ix_notifications_created_at'), 'notifications', ['created_at'], unique=False)
    op.create_index(op.f('ix_notifications_is_read'), 'notifications', ['is_read'], unique=False)
    op.create_index(op.f('ix_notifications_user_id'), 'notifications', ['user_id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payment_system_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('plan_name', sa.String(), nullable=False),
    sa.Column('months', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_payments_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payments'))
    )
    op.create_index(op.f('ix_payments_payment_system_id'), 'payments', ['payment_system_id'], unique=True)
    op.create_index(op.f('ix_payments_user_id'), 'payments', ['user_id'], unique=False)
    op.create_table('post_activity_heatmaps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('heatmap_data', sa.JSON(), nullable=False),
    sa.Column('last_updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_post_activity_heatmaps_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_post_activity_heatmaps'))
    )
    op.create_index(op.f('ix_post_activity_heatmaps_user_id'), 'post_activity_heatmaps', ['user_id'], unique=True)
    op.create_table('profile_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('total_likes_on_content', sa.Integer(), nullable=False),
    sa.Column('friends_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_profile_metrics_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_profile_metrics')),
    sa.UniqueConstraint('user_id', 'date', name='_user_date_metric_uc')
    )
    op.create_index('ix_profile_metrics_user_date', 'profile_metrics', ['user_id', 'date'], unique=False)
    op.create_table('proxies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('encrypted_proxy_url', sa.String(), nullable=False),
    sa.Column('is_working', sa.Boolean(), nullable=False),
    sa.Column('last_checked_at', sa.DateTime(), nullable=True),
    sa.Column('check_status_message', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_proxies_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_proxies')),
    sa.UniqueConstraint('user_id', 'encrypted_proxy_url', name='_user_proxy_uc')
    )
    op.create_index(op.f('ix_proxies_is_working'), 'proxies', ['is_working'], unique=False)
    op.create_index(op.f('ix_proxies_user_id'), 'proxies', ['user_id'], unique=False)
    op.create_table('scenarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('schedule', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('first_step_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['first_step_id'], ['scenario_steps.id'], name='fk_scenarios_first_step_id_scenario_steps', use_alter=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_scenarios_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_scenarios'))
    )
    op.create_index(op.f('ix_scenarios_user_id'), 'scenarios', ['user_id'], unique=False)
    op.create_table('scheduled_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('vk_profile_id', sa.BigInteger(), nullable=False),
    sa.Column('post_text', sa.Text(), nullable=True),
    sa.Column('attachments', sa.JSON(), nullable=True),
    sa.Column('publish_at', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('scheduled', 'published', 'failed', name='scheduledpoststatus'), nullable=False),
    sa.Column('celery_task_id', sa.String(), nullable=True),
    sa.Column('vk_post_id', sa.String(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_scheduled_posts_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_scheduled_posts')),
    sa.UniqueConstraint('celery_task_id', name=op.f('uq_scheduled_posts_celery_task_id'))
    )
    op.create_index(op.f('ix_scheduled_posts_publish_at'), 'scheduled_posts', ['publish_at'], unique=False)
    op.create_index(op.f('ix_scheduled_posts_status'), 'scheduled_posts', ['status'], unique=False)
    op.create_index(op.f('ix_scheduled_posts_user_id'), 'scheduled_posts', ['user_id'], unique=False)
    op.create_index(op.f('ix_scheduled_posts_vk_profile_id'), 'scheduled_posts', ['vk_profile_id'], unique=False)
    op.create_table('sent_congratulations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('friend_vk_id', sa.BigInteger(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_sent_congratulations_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sent_congratulations')),
    sa.UniqueConstraint('user_id', 'friend_vk_id', 'year', name='_user_friend_year_uc')
    )
    op.create_index(op.f('ix_sent_congratulations_friend_vk_id'), 'sent_congratulations', ['friend_vk_id'], unique=False)
    op.create_index(op.f('ix_sent_congratulations_user_id'), 'sent_congratulations', ['user_id'], unique=False)
    op.create_table('task_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('celery_task_id', sa.String(), nullable=True),
    sa.Column('task_name', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('result', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_task_history_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_history'))
    )
    op.create_index(op.f('ix_task_history_celery_task_id'), 'task_history', ['celery_task_id'], unique=True)
    op.create_index(op.f('ix_task_history_status'), 'task_history', ['status'], unique=False)
    op.create_index(op.f('ix_task_history_task_name'), 'task_history', ['task_name'], unique=False)
    op.create_index(op.f('ix_task_history_user_id'), 'task_history', ['user_id'], unique=False)
    op.create_index('ix_task_history_user_status', 'task_history', ['user_id', 'status'], unique=False)
    op.create_table('teams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('fk_teams_owner_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_teams')),
    sa.UniqueConstraint('owner_id', name=op.f('uq_teams_owner_id'))
    )
    op.create_table('weekly_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('week_identifier', sa.String(), nullable=False),
    sa.Column('likes_count', sa.Integer(), nullable=False),
    sa.Column('friends_added_count', sa.Integer(), nullable=False),
    sa.Column('friend_requests_accepted_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_weekly_stats_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_weekly_stats')),
    sa.UniqueConstraint('user_id', 'week_identifier', name='_user_week_uc')
    )
    op.create_table('scenario_steps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scenario_id', sa.Integer(), nullable=False),
    sa.Column('step_type', sa.Enum('action', 'condition', name='scenariosteptype'), nullable=False),
    sa.Column('details', sa.JSON(), nullable=False),
    sa.Column('next_step_id', sa.Integer(), nullable=True),
    sa.Column('on_success_next_step_id', sa.Integer(), nullable=True),
    sa.Column('on_failure_next_step_id', sa.Integer(), nullable=True),
    sa.Column('position_x', sa.Float(), nullable=True),
    sa.Column('position_y', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['next_step_id'], ['scenario_steps.id'], name=op.f('fk_scenario_steps_next_step_id_scenario_steps')),
    sa.ForeignKeyConstraint(['on_failure_next_step_id'], ['scenario_steps.id'], name=op.f('fk_scenario_steps_on_failure_next_step_id_scenario_steps')),
    sa.ForeignKeyConstraint(['on_success_next_step_id'], ['scenario_steps.id'], name=op.f('fk_scenario_steps_on_success_next_step_id_scenario_steps')),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], name=op.f('fk_scenario_steps_scenario_id_scenarios')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_scenario_steps'))
    )
    op.create_index(op.f('ix_scenario_steps_scenario_id'), 'scenario_steps', ['scenario_id'], unique=False)
    op.create_table('team_members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('admin', 'member', name='teammemberrole'), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], name=op.f('fk_team_members_team_id_teams'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_team_members_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_team_members')),
    sa.UniqueConstraint('team_id', 'user_id', name='_team_user_uc'),
    sa.UniqueConstraint('user_id', name=op.f('uq_team_members_user_id'))
    )
    op.create_table('team_profile_access',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_member_id', sa.Integer(), nullable=False),
    sa.Column('profile_user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['profile_user_id'], ['users.id'], name=op.f('fk_team_profile_access_profile_user_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_member_id'], ['team_members.id'], name=op.f('fk_team_profile_access_team_member_id_team_members'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_team_profile_access'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('team_profile_access')
    op.drop_table('team_members')
    op.drop_index(op.f('ix_scenario_steps_scenario_id'), table_name='scenario_steps')
    op.drop_table('scenario_steps')
    op.drop_table('weekly_stats')
    op.drop_table('teams')
    op.drop_index('ix_task_history_user_status', table_name='task_history')
    op.drop_index(op.f('ix_task_history_user_id'), table_name='task_history')
    op.drop_index(op.f('ix_task_history_task_name'), table_name='task_history')
    op.drop_index(op.f('ix_task_history_status'), table_name='task_history')
    op.drop_index(op.f('ix_task_history_celery_task_id'), table_name='task_history')
    op.drop_table('task_history')
    op.drop_index(op.f('ix_sent_congratulations_user_id'), table_name='sent_congratulations')
    op.drop_index(op.f('ix_sent_congratulations_friend_vk_id'), table_name='sent_congratulations')
    op.drop_table('sent_congratulations')
    op.drop_index(op.f('ix_scheduled_posts_vk_profile_id'), table_name='scheduled_posts')
    op.drop_index(op.f('ix_scheduled_posts_user_id'), table_name='scheduled_posts')
    op.drop_index(op.f('ix_scheduled_posts_status'), table_name='scheduled_posts')
    op.drop_index(op.f('ix_scheduled_posts_publish_at'), table_name='scheduled_posts')
    op.drop_table('scheduled_posts')
    op.drop_index(op.f('ix_scenarios_user_id'), table_name='scenarios')
    op.drop_table('scenarios')
    op.drop_index(op.f('ix_proxies_user_id'), table_name='proxies')
    op.drop_index(op.f('ix_proxies_is_working'), table_name='proxies')
    op.drop_table('proxies')
    op.drop_index('ix_profile_metrics_user_date', table_name='profile_metrics')
    op.drop_table('profile_metrics')
    op.drop_index(op.f('ix_post_activity_heatmaps_user_id'), table_name='post_activity_heatmaps')
    op.drop_table('post_activity_heatmaps')
    op.drop_index(op.f('ix_payments_user_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_payment_system_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_notifications_user_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_is_read'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_created_at'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_table('monthly_stats')
    op.drop_index(op.f('ix_managed_profiles_profile_user_id'), table_name='managed_profiles')
    op.drop_index(op.f('ix_managed_profiles_manager_user_id'), table_name='managed_profiles')
    op.drop_table('managed_profiles')
    op.drop_index(op.f('ix_login_history_user_id'), table_name='login_history')
    op.drop_index(op.f('ix_login_history_timestamp'), table_name='login_history')
    op.drop_table('login_history')
    op.drop_index('ix_friends_history_user_date', table_name='friends_history')
    op.drop_table('friends_history')
    op.drop_index(op.f('ix_friend_request_logs_user_id'), table_name='friend_request_logs')
    op.drop_index(op.f('ix_friend_request_logs_target_vk_id'), table_name='friend_request_logs')
    op.drop_index(op.f('ix_friend_request_logs_status'), table_name='friend_request_logs')
    op.drop_index(op.f('ix_friend_request_logs_created_at'), table_name='friend_request_logs')
    op.drop_table('friend_request_logs')
    op.drop_index(op.f('ix_filter_presets_user_id'), table_name='filter_presets')
    op.drop_index(op.f('ix_filter_presets_action_type'), table_name='filter_presets')
    op.drop_table('filter_presets')
    op.drop_index('ix_daily_stats_user_date', table_name='daily_stats')
    op.drop_table('daily_stats')
    op.drop_index(op.f('ix_automations_user_id'), table_name='automations')
    op.drop_index(op.f('ix_automations_automation_type'), table_name='automations')
    op.drop_table('automations')
    op.drop_index(op.f('ix_action_logs_user_id'), table_name='action_logs')
    op.drop_index(op.f('ix_action_logs_timestamp'), table_name='action_logs')
    op.drop_index(op.f('ix_action_logs_action_type'), table_name='action_logs')
    op.drop_table('action_logs')
    op.drop_index(op.f('ix_users_vk_id'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
