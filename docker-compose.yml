# docker-compose.yml (Финальная версия для локальной разработки)

services:
  postgres:
    # ... без изменений ...
    image: postgres:16-alpine
    container_name: social_pilot_postgres_local_dev
    env_file: ./.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    # ... без изменений ...
    image: redis:7-alpine
    container_name: social_pilot_redis_local_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Сервис для ARQ Worker, работающий с вашим локальным кодом
  worker:
    build:
      context: .
      dockerfile: worker.Dockerfile
    container_name: social_pilot_worker_local_dev
    volumes:
      - ./backend:/app
    env_file:
      - ./.env # <-- Сначала загружаем все переменные из .env

    # --- ДОБАВЬТЕ ЭТОТ БЛОК ---
    # Переопределяем адрес сервера БД специально для этого контейнера
    environment:
      - POSTGRES_SERVER=postgres # <-- Используем имя сервиса
      - REDIS_HOST=redis # <-- Также делаем это и для Redis, это лучшая практика
    # ---------------------------

    restart: always
    depends_on:
      redis:
        condition: service_healthy
      postgres: # <-- Добавим зависимость и от postgres
        condition: service_healthy

# ... блок volumes без изменений ...
volumes:
  postgres_data_dev: {}
  redis_data_dev: {}
